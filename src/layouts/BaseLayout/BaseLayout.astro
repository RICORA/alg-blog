---
import "@/styles/global.css"
import themeScript from "./theme?raw"
import { build } from "esbuild"
import { NavBar } from "@/components/SideBar/NavBar"
import { InfoBar } from "@/components/SideBar/InfoBar"
import OpenGraphMeta from "./OpenGraph.astro"
import type { OpenGraph } from "./openGraphSchema"
import type { PartiallyPartial } from "@/lib/type"
import type {
  TwitterCard,
  TwitterSummaryCard,
  TiwtterAppCard,
  TwitterPlayerCard,
  TwitterSummaryLargeImageCard,
} from "./twitterCardSchema"
import TwitterCardMeta from "./TwitterCard.astro"

export type Props = {
  title: string
  titleSuffix?: string
  description?: string
  og: PartiallyPartial<OpenGraph, "title" | "type" | "image">
  twitter?:
    | TwitterSummaryCard
    | TwitterSummaryLargeImageCard
    | PartiallyPartial<TiwtterAppCard, "site">
    | PartiallyPartial<TwitterPlayerCard, "site">
}
const props = Astro.props

const titleSuffix = props.titleSuffix ?? "RICORA Programming Team"
const title = titleSuffix ? `${props.title} - ${titleSuffix}` : props.title

if (!Astro.site) throw new Error("Please set the site URL in astro.config.ts")
const og = {
  title: props.og.title ?? props.title,
  description: props.og.description ?? props.description,
  type: props.og.type ?? "website",
  siteName: "RICORA Programming Team",
  locale: "ja_JP",
  image: props.og.image ?? new URL("og.png", Astro.site),
  ...props.og,
  prefixies: {
    og: "https://ogp.me/ns#",
    ...props.og.prefixies,
  },
} satisfies OpenGraph

const twitter: TwitterCard = props.twitter
  ? {
      site: props.twitter.site ?? "@ricora_alg",
      ...props.twitter,
    }
  : {
      card: "summary",
      title: og.title,
      site: "@ricora_alg",
      image: new URL("logo.png", Astro.site),
    }

const result = await build({
  stdin: {
    contents: themeScript,
    resolveDir: ".",
    loader: "ts",
  },
  bundle: true,
  format: "iife",
  target: "es6",
  minify: true,
  write: false,
})
const bundledThemeScript = "console.time('theme');" + result.outputFiles[0].text + "console.timeLog('theme');"
---

<html lang="ja">
  <head prefix={Object.entries(og.prefixies).reduce((acc, [key, value]) => acc + `${key}: ${value} `, "")}>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    {props.description && <meta name="description" content={props.description} />}
    <link rel="sitemap" href="/sitemap-index.xml" />
    <OpenGraphMeta {...og} />
    <TwitterCardMeta {...twitter} />
  </head>
  <body>
    <script is:inline set:html={bundledThemeScript} />
    <div class="relative mx-auto flex h-fit min-h-full flex-col px-4 md:flex-row md:gap-8 xl:max-w-[1536px]">
      <NavBar />
      <slot />
      <InfoBar />
    </div>
    <div id="modal" class="fixed left-0 top-0"></div>
  </body>
</html>
