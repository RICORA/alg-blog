---
import { twMerge } from "tailwind-merge"
import type { HTMLAttributes } from "astro/types"
import { ToggleThemeButton } from "./ToggleThemeButton"
import { Icon } from "@/components/Elements/Icon"
import { SearchModal } from "./SearchModal"
import { NavDrawer, NavDrawerSocialLinks, NavDrawerLinks } from "./NavDrawer"
import { LinkMenu } from "./LinkMenu"
import { Link } from "./Link"
import { IconLink } from "./IconLink"
import { links } from "./links"
import { socialLinks } from "./links"

type Props = HTMLAttributes<"aside">
const { class: className, ...props } = Astro.props
---

<header
  class={twMerge("sticky top-0 backdrop-blur-xl bg-bg-canvas z-30 border-b", className)}
  data-pagefind-ignore="all"
  {...props}
>
  <div class="container mx-auto flex h-16 max-w-screen-2xl items-center justify-between px-8">
    <div class="flex flex-row gap-6">
      <a href="/" class="flex flex-row items-center gap-2 xl:gap-3">
        <Icon name="brand:ricora" alt="RICORA" class="size-6 xl:size-8" />
        <div class="flex flex-col gap-1">
          <span class="text-sm font-bold">RICORA Programming Team</span>
          <span class="hidden text-xs text-fg-subtle xl:block">東京理科大学 電子計算機研究会 プログラミング班</span>
        </div>
      </a>
      <nav class="hidden flex-row items-center gap-0 xl:flex">
        {
          links.map((link) =>
            link.type === "menu" ? (
              <LinkMenu title={link.title} links={link.links} client:load />
            ) : (
              <Link title={link.title} href={link.href} />
            ),
          )
        }
      </nav>
    </div>
    <div class="flex flex-row items-center gap-0 md:gap-6">
      <SearchModal client:only="solid">
        <Icon slot="searchIcon" name="tabler:search" class="size-6" />
        <Icon slot="buttonIcon" name="tabler:search" class="size-6" />
      </SearchModal>
      <div class="flex flex-row items-center gap-0">
        {
          socialLinks.map((link) => (
            <IconLink name={link.icon} label={link.label} href={link.href} class="hidden md:flex" client:load />
          ))
        }
        <div class="mx-2 my-auto hidden h-8 w-[2px] rounded-full bg-border-subtle md:block xl:hidden"></div>
        <ToggleThemeButton class="hidden md:block" client:only="solid">
          <Icon slot="lightIcon" name="tabler:sun" class="flex size-6 items-center" />
          <Icon slot="darkIcon" name="tabler:moon-stars" class="flex size-6 items-center" />
        </ToggleThemeButton>
        <NavDrawer client:load class="xl:hidden">
          <Icon slot="closeButtonIcon" name="tabler:x" class="size-6" />
          <NavDrawerLinks links={links} slot="links" />
          <NavDrawerSocialLinks links={socialLinks} slot="socialLinks" />
        </NavDrawer>
      </div>
    </div>
  </div>
</header>
